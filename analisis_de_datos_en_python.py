# -*- coding: utf-8 -*-
"""analisis de datos en python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BRDDUsFR61lmT_jJC5Pk5n0Z-GCarAEM

SEMILLA - SEED

*la semilla es un valor base de las cuales randint sacara datos al azar.*


para llamar a la semilla: 
**from numpy.random import seed**


para llamar a la funcion random: 
**from numpy.random import randint**


para utilizar randint es de la siguiente forma:
randint(**valor_inicial**, **valor_final+1**, **cantidad de valores random**)
 

*en el ejemplo se obtienen 5 valores random  desde el valor cero hasta el 10*
"""

from numpy.random import seed
from numpy.random import randint

semillas = 1234

seed(semillas)
randint(0,11,5)

"""en el siguiente ejemplo se obtienen 10 valores desde el numero 5 hasta el numero 60"""

seed = (semillas)
edades = randint(5,61,10)
edades

"""## **moda: **
mide cual es el numero mas repetido dentro de un centro de datos.

la libreria a usar es:

**from statistics as st**

generamos un arreglo con numeros que representan edades de 5 personas y sobre este objeto llamaremos a la funcion **st.mode()** de nuestro objeto st de la siguiente forma.
"""

import statistics as st 

edades = [10, 10, 2, 5, 7]

st.mode(edades)

"""## **mediana**

la mediana es la suma de todos los valores divididos por la cantidad de valores.
se le suele llamar:

percentil 50
cuartantil 0.5


"""

numeros = list(range(1,10))
numeros

"""Esta libreria funciona con  numpy
y la funcion se llama de la siguiente manera:

**from numpy  import quantile**

y el comando se le llama asi

quantile(numeros, 0.5)

revisa el ejemplo

"""

from numpy import quantile

mediana = quantile(numeros,0.5)
# numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print("la mediana de numeros", mediana)
mediana = quantile(numeros, 0.25)
print ("la mediana del 25% es ", mediana)

mediana = quantile(numeros, 0.5)
print("la mediana del 50% es ", mediana)

mediana = quantile(numeros, 0.75)
print ("la mediana del 75% es ", mediana)

"""### **diferentes formas de obtener la mediana**"""

valores = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
mediana = quantile(valores, 0.5)
print ("la mediana  es ", mediana)

mediana = quantile(valores, 0.5, interpolation='lower')
print ("la mediana al mas bajo es ", mediana)

mediana = quantile(valores, 0.5, interpolation='higher')
print ("la mediana al mas alto es ", mediana)

mediana = quantile(valores, 0.5, interpolation='nearest')
print ("la mediana mas cercana es ", mediana)

mediana = quantile(valores, 0.5, interpolation='linear')
print ("la mediana lineal  es ", mediana)

mediana = quantile(valores, 0.5, interpolation='midpoint')
print ("la mediana de punto medio es ", mediana)

"""## **PROMEDIO = MEAN = AVERAGE**
es la suma de todos los datos divididos por la cantidad

utiliza la funcion numpy importando mean:

**from numpy import mean**

el comando es:

mean(variable)


"""

from numpy import mean

numeros = [15,16,16,17,17,18,19,19,20,21]
total= mean(numeros)
print ("promedio de numeros",total)

computador_por_persona = [2,0]

total = mean(computador_por_persona)
print("computadores por persona", total)

"""## **DESVIACION ESTANDAR**

es la desviacion o tendencia de los datos
nos indica la desviacion respecto a la media en el caso de el computador por persona hay personas que pueden tener 2 computadores asi como otra puede tener cero.

para llamar a la funcion de desviacion estandar es de la siguiente forma

# **from numpy import std**

el comando es:

# **std(variable)**

# **PORCENTAJE Y LIBRERIA PANDAS**

es para calcular el porcentaje de los valores 

para llamar a la funcion es asi:

## **import pandas as pd **
"""

import pandas as pd

# definimos el nombre de las filas
nombrefilas = ["sin recompensa", "con recompensa"]

# definimos los datos 
# grupoA = [sin rescompensa,con recompensa]
# grupoB = [sin rescompensa,con recompensa]
grupo1 = [50,40]
grupo2 = [60,70]

# agrupamos los datos en un diccionario
datos = {"GRUPO 1":grupo1,"GRUPO 2": grupo2}

#agregamos titulo a nuestro dataframe  de la siguiente manera
tabla = pd.DataFrame(datos, index = nombrefilas)

# mostramos los datos
print (datos)
print()
# mostramos nuestro conjunto de datos
print (tabla)
print()

# la suma de cada grupo
sumas = tabla.sum()
print()
print("la suma de cada grupo es  ")
print(sumas)
print()

# la suma de de ambos grupos
total = sum(sumas)
print("el total de personas es", total)
print()

#mostrar solo los "sin recomensa" 

sinr = tabla.loc["sin recompensa"]
print("lista de los sin recompensa")
print(sinr)
print()
#suma de los sin recompensa
suma_sinr = (sum(sinr))
print("el total de los sin recomensa es:", suma_sinr)

#mostrar solo los "con recompensa"
print()
conr = tabla.loc["con recompensa"]
print("lista de los con recomensa")
print(conr)
print()


#suma de los con recompensa
suma_conr = (sum(conr))
print("el total de los con recomensa es: ", suma_conr)
print()

# obtener el % de los sin recompensa y los con recompensa

# (sin recompensa/total)/100
porcentaje1= (suma_sinr/total)*100
print("el porcentaje de personas sin recompensa es :", porcentaje1)
print()

# (con recompensa/total)/100
porcentaje2= (suma_conr/total)*100
print("el porcentaje de personas con recompensa es :", porcentaje2)
print()

"""### **ACTIVIDAD**"""

#porcentaje de personas grupo1 y 2

x = tabla.loc[1, 1]
y = tabla.loc[1,2]
suma_x = (sum(x)/total)*100
suma_y = (sum(y)/total)*100
print("el % de personas del grupo 1 es", suma_x)
print("el % de personas del grupo 2 es", suma_y)